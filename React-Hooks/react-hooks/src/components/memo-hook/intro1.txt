What is React useMemo ?
React useMemo() hook is a function that caches the value produced from an expensive function used inside a React component. 
It accepts the expensive function and works by storing the value produced from the function when that is passed the same arguments repeatedly. 
When different arguments are passed, it returns the new value and updates the cache.


const memoizedResult = useMemo(compute, dependencies);


During initial rendering, useMemo(compute, dependencies) invokes compute, memoizes the calculation result, and returns it to the component.

If the dependencies don't change during the next renderings, then useMemo() doesn't invoke compute, but returns the memoized value.

But if the dependencies change during re-rendering, then useMemo() invokes compute, memoizes the new value, and returns it.